{"mappings":"AEkbE,oM,+GAYA,oFAKA,oDAGA,sGAMA,sGAMA,qEAIA,mCEjbA,4WAQA,qTAaA,iE,qxBE6OE,wFAKA,uJAOE,8JAOA,0CAGA,kCAGF,wLAOI,iEAKE,iIAKN,kFAKI,iIAKA,qFAIF,oFAGE,mFAGA,uEAGA,gGAKA,mEAGA,6D,yuBExLJ,sFAIA,+BAGF,kL,yNAcE,wPASA,oCAGE,8MASF,yOAUA,uCAGE,sa,uIAkBA,wFAKA,uIAKE,4FAKA,wHE/IN,seAeA,mFAIA,qFAKA,0EAIA,8DAIA,+LAOA,+PAQA,qIAIA,8CAGA,4FCsJA,2DAKA,yCAIA,8CAIA,2GAOA,iCAGA,0EAKA","sources":["index.cc2eb40a.css","node_modules/pointsplotcomp/dist/PointsPlotComp.css","node_modules/pointsplotcomp/dist/src/PointsPlotComp.vue","node_modules/buttoncomp/dist/buttoncomp.css","node_modules/buttoncomp/dist/ButtonComp.vue","node_modules/tablecomp/dist/tablecomp.css","node_modules/tablecomp/dist/src/TableComp.vue","node_modules/selectcomp/dist/selectcomp.css","node_modules/selectcomp/dist/src/SelectComp.vue","node_modules/inputcomp/dist/inputcomp.css","node_modules/inputcomp/dist/InputComp.vue","components/App.vue"],"sourcesContent":[":root {\n  --points_plot_comp_font_family: Verdana, serif;\n  --points_plot_comp_background: white;\n  --points_plot_comp_axis_color: black;\n  --points_plot_comp_point_opacity: .6;\n  --points_plot_comp_title_color: black;\n}\n\n#container {\n  font-family: var(--points_plot_comp_font_family);\n  background-color: var(--points_plot_comp_background);\n}\n\n.titles {\n  text-anchor: middle;\n  fill: var(--points_plot_comp_title_color);\n  font-weight: bold;\n}\n\n.ticLines {\n  stroke: var(--points_plot_comp_axis_color);\n}\n\n.ticLabels {\n  text-anchor: middle;\n  color: var(--points_plot_comp_axis_color);\n  font-size: 11px;\n  font-weight: bold;\n}\n\n.axisTitle {\n  text-anchor: middle;\n  color: var(--points_plot_comp_axis_color);\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.points {\n  opacity: var(--points_plot_comp_point_opacity);\n  cursor: pointer;\n}\n\n#legend {\n  cursor: move;\n  background: none;\n}\n\n:root {\n  --button_comp_font_family: Verdana, serif;\n  --button_comp_font_size: 1rem;\n  --button_comp_background: linear-gradient(to bottom, #969696 0, #969696 13%, #5f5f5f 33%, #1e1e1e 64%, #1e1e1e 100%);\n  --button_comp_color: #ffffffe6;\n  --button_comp_box_shadow: 4px 4px 6px 1px #0006, 2px 2px 2px 0 #0003;\n  --button_comp_hover_background: linear-gradient(to bottom, #969696 0, #1e1e1e 100%);\n}\n\n.buttonComp {\n  width: max-content;\n  height: max-content;\n  text-align: center;\n  cursor: pointer;\n  font-family: var(--button_comp_font_family);\n  font-size: var(--button_comp_font_size);\n  background: var(--button_comp_background);\n  color: var(--button_comp_color);\n  box-shadow: var(--button_comp_box_shadow);\n  border-radius: 5px;\n  padding: .5rem;\n}\n\n.buttonComp:hover {\n  background: var(--button_comp_hover_background);\n}\n\n:root {\n  --table_comp_font_family: Verdana, serif;\n  --table_comp_title_font_size: 1rem;\n  --table_comp_title_color: black;\n  --table_comp_sub_title_font_size: .6rem;\n  --table_comp_thead_color: black;\n  --table_comp_thead_border_bottom: 1px solid black;\n  --table_comp_thead_background: linear-gradient(to bottom, #f5f6f6 0%, #dbdce2 21%, #b8bac6 49%, #dddfe3 80%, #f5f6f6 100%);\n  --table_comp_thead_text_align: left;\n  --table_comp_row_color: black;\n  --table_comp_row_selected_color: green;\n  --table_comp_row_border_bottom: 1px solid black;\n  --table_comp_row_odd_background: linear-gradient(to bottom, #cedce7 0%, #596a72 100%);\n  --table_comp_row_even_background: linear-gradient(to bottom, #cedce7 0%, #596a72 100%);\n  --table_comp_row_hover_color: linear-gradient(to bottom, #b4e391 0%, #61c419 50%, #b4e391 100%);\n  --table_comp_cell_font_size: .75rem;\n}\n\n.tableComp {\n  font-family: var(--table_comp_font_family);\n  flex-direction: column;\n  display: flex;\n}\n\n.tableComp_title {\n  font-size: var(--table_comp_title_font_size);\n  color: var(--table_comp_title_color);\n  align-self: center;\n  margin-bottom: .8rem;\n  font-weight: bold;\n}\n\n.tableComp_subtitle {\n  font-size: var(--table_comp_sub_title_font_size);\n  color: var(--table_comp_title_color);\n  align-self: center;\n  margin-bottom: .8rem;\n  font-weight: bold;\n}\n\n.tableComp_table {\n  border-collapse: collapse;\n}\n\n.tableComp_thead tr {\n  display: block;\n}\n\n.tableComp_thead tr th {\n  color: var(--table_comp_thead_color);\n  border-bottom: var(--table_comp_thead_border_bottom);\n  background: var(--table_comp_thead_background);\n  cursor: pointer;\n  padding: 2px;\n}\n\n.tableComp_tbody {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.tableComp_tbody::-webkit-scrollbar-track {\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.tableComp_tbody::-webkit-scrollbar {\n  height: 12px;\n  width: 12px;\n  background-color: #0000;\n}\n\n.tableComp_tbody::-webkit-scrollbar-thumb {\n  background-color: #d62929;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.tableComp_tbody tr {\n  cursor: pointer;\n  border-bottom: var(--table_comp_row_border_bottom);\n}\n\n.tableComp_tbody tr:nth-child(2n+1) {\n  background: var(--table_comp_row_odd_background);\n}\n\n.tableComp_tbody tr:nth-child(2n) {\n  background: var(--table_comp_row_even_background);\n}\n\n.tableComp_tbody tr:hover {\n  background: var(--table_comp_row_hover_color);\n}\n\n.tableComp_tbody tr td {\n  font-size: var(--table_comp_cell_font_size);\n  text-align: center;\n  padding: 2px;\n}\n\n.tableComp_tr__selected {\n  color: var(--table_comp_row_selected_color);\n}\n\n.tableComp_tr__notselected {\n  color: var(--table_comp_row_color);\n}\n\n:root {\n  --select_comp_font_family: Verdana, serif;\n  --select_comp_arrow_icon: \"â‡“\";\n  --select_comp_arrow_color: black;\n  --select_comp_width: 10rem;\n  --select_comp_font_size: 1rem;\n  --select_comp_color: darkgray;\n  --select_comp_background: transparent;\n  --select_comp_border_color: black;\n  --select_comp_heading_font_size: 1rem;\n  --select_comp_heading_color: black;\n  --select_comp_heading_font_weight: bold;\n  --select_comp_items_panel_color: black;\n  --select_comp_items_panel_width: 8rem;\n  --select_comp_items_panel_background: white;\n  --select_comp_items_panel_border: 1px solid black;\n  --select_comp_items_panel_position: static;\n  --select_comp_items_panel_z_index: auto;\n  --select_comp_item_font_size: .75rem;\n  --select_comp_item_hover_box_shadow: 0 0 10px gray;\n  --select_comp_item_hover_color: violet;\n}\n\n.selectComp {\n  width: var(--select_comp_width);\n  font-family: var(--select_comp_font_family);\n}\n\n.selectComp:focus {\n  outline: none;\n}\n\n.selectComp_headingBox {\n  text-align: center;\n  color: var(--select_comp_heading_color);\n  font-size: var(--select_comp_heading_font_size);\n  font-weight: var(--select_comp_heading_font_weight);\n}\n\n.selectComp_selectBoxSec {\n  color: var(--select_comp_color);\n  background: var(--select_comp_background);\n  font-size: var(--select_comp_font_size);\n  border: 1px solid var(--select_comp_border_color);\n  flex-direction: row;\n  display: flex;\n}\n\n.selectComp_selectBoxSecBottomBorder {\n  color: var(--select_comp_color);\n  background: var(--select_comp_background);\n  font-size: var(--select_comp_font_size);\n  border: none;\n  border-bottom: 1px solid var(--select_comp_border_color);\n  flex-direction: row;\n  display: flex;\n}\n\n.selectComp_selectBox {\n  padding: .2rem;\n}\n\n.selectComp_arrowIcon__open:before {\n  content: var(--select_comp_arrow_icon);\n  color: var(--select_comp_arrow_color);\n  cursor: pointer;\n  margin-right: .2rem;\n  font-size: 1rem;\n  transition: all .6s linear;\n  display: inline-block;\n}\n\n.selectComp_arrowIcon__closed:before {\n  content: var(--select_comp_arrow_icon);\n  color: var(--select_comp_arrow_color);\n  cursor: pointer;\n  margin-right: .2rem;\n  font-size: 1rem;\n  transition: all .6s linear;\n  display: inline-block;\n  transform: rotate(-90deg);\n}\n\n.selectComp_itemsSec {\n  position: relative;\n}\n\n.selectComp_itemsPanel {\n  color: var(--select_comp_items_panel_color);\n  background: var(--select_comp_items_panel_background);\n  border: var(--select_comp_items_panel_border);\n  position: var(--select_comp_items_panel_position);\n  z-index: var(--select_comp_items_panel_z_index);\n  width: var(--select_comp_items_panel_width);\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  padding: .5rem;\n  transition: all 2s ease-in-out;\n  overflow: auto;\n}\n\n.selectComp_itemsPanel::-webkit-scrollbar-track {\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.selectComp_itemsPanel::-webkit-scrollbar {\n  width: 12px;\n  height: 12px;\n  background-color: #0000;\n}\n\n.selectComp_itemsPanel::-webkit-scrollbar-thumb {\n  background-color: #d62929;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.selectComp_itemBox {\n  cursor: pointer;\n  font-size: var(--select_comp_item_font_size);\n  margin: .3rem;\n}\n\n.selectComp_itemBox:hover {\n  color: var(--select_comp_item_hover_color);\n  box-shadow: var(--select_comp_item_hover_box_shadow);\n}\n\n:root {\n  --input_comp_width: 10rem;\n  --input_comp_font_family: Verdana, serif;\n  --input_comp_heading_color: black;\n  --input_comp_heading_font_size: 1rem;\n  --input_comp_heading_font_weight: bold;\n  --input_comp_input_font_size: .8rem;\n  --input_comp_input_font_weight: normal;\n  --input_comp_input_color: black;\n  --input_comp_input_background: transparent;\n  --input_comp_input_border_color: black;\n  --input_comp_input_placeholder_color: black;\n  --input_comp_input_focus_outline: yellow;\n  --input_comp_input_focus_background: white;\n}\n\n.inputComp {\n  width: var(--input_comp_width);\n  font-family: var(--input_comp_font_family);\n}\n\n.inputComp_containerBox__above {\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n}\n\n.inputComp_containerBox__below {\n  flex-direction: column-reverse;\n  display: flex;\n}\n\n.inputComp_containerBox__left {\n  flex-direction: row;\n  display: flex;\n}\n\n.inputComp_headerBox {\n  text-align: center;\n  color: var(--input_comp_heading_color);\n  font-size: var(--input_comp_heading_font_size);\n  font-weight: var(--input_comp_heading_font_weight);\n  align-self: center;\n}\n\n.inputComp_input {\n  color: var(--input_comp_input_color);\n  background: var(--input_comp_input_background);\n  border-color: var(--input_comp_input_border_color);\n  font-size: var(--input_comp_input_font_size);\n  font-weight: var(--input_comp_input_font_weight);\n  padding: .4rem;\n}\n\n.inputComp_input:focus {\n  outline-color: var(--input_comp_input_focus_outline);\n  background-color: var(--input_comp_input_focus_background);\n}\n\n.inputComp_input:invalid {\n  background-color: red;\n}\n\n.inputComp_input::-webkit-input-placeholder {\n  color: var(--input_comp_input_placeholder_color);\n}\n\n#container {\n  flex-direction: column;\n  padding: 20px;\n  display: flex;\n}\n\n#plotDiv {\n  flex-direction: row;\n  display: flex;\n}\n\n#tablesDiv {\n  flex-direction: column;\n  display: flex;\n}\n\n#controlsDiv {\n  height: 120px;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-top: 30px;\n  display: flex;\n}\n\n#pointsPlotComp {\n  margin-left: 40px;\n}\n\n.headingDiv {\n  font-family: Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n#scaleDiv {\n  width: 800px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n}\n\n/*# sourceMappingURL=index.cc2eb40a.css.map */\n",":root {\n  --points_plot_comp_font_family: Verdana, serif;\n  --points_plot_comp_background: white;\n  --points_plot_comp_axis_color: black;\n  --points_plot_comp_point_opacity: .6;\n  --points_plot_comp_title_color: black;\n}\n\n#container {\n  font-family: var(--points_plot_comp_font_family);\n  background-color: var(--points_plot_comp_background);\n}\n\n.titles {\n  text-anchor: middle;\n  fill: var(--points_plot_comp_title_color);\n  font-weight: bold;\n}\n\n.ticLines {\n  stroke: var(--points_plot_comp_axis_color);\n}\n\n.ticLabels {\n  text-anchor: middle;\n  color: var(--points_plot_comp_axis_color);\n  font-size: 11px;\n  font-weight: bold;\n}\n\n.axisTitle {\n  text-anchor: middle;\n  color: var(--points_plot_comp_axis_color);\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.points {\n  opacity: var(--points_plot_comp_point_opacity);\n  cursor: pointer;\n}\n\n#legend {\n  cursor: move;\n  background: none;\n}\n\n","<template>\r\n  <div id=\"container\">\r\n    <svg\r\n      :width=\"width\"\r\n      :height=\"height\"\r\n    >\r\n      <g>\r\n        <!--draw the title-->\r\n        <text\r\n          v-if=\"title\"\r\n          class=\"titles\"\r\n          :font-size=\"28\"\r\n          :x=\"width / 2\"\r\n          :y=\"titleY\"\r\n        >\r\n          {{ title }}\r\n        </text>\r\n        <!--draw the subTitle-->\r\n        <text\r\n          v-if=\"subTitle\"\r\n          class=\"titles\"\r\n          :font-size=\"20\"\r\n          :x=\"width / 2\"\r\n          :y=\"subtitleY\"\r\n        >\r\n          {{ subTitle }}\r\n        </text>\r\n        \r\n        <!--draw x axis-->\r\n        <g\r\n          id=\"xAxisGroup\"\r\n          :transform=\"translateXAxis\"\r\n        >\r\n          <!--draw horizontal line-->\r\n          <path \r\n            class=\"ticLines\"\r\n            :d=\"drawXaxis\"\r\n          />\r\n          <!--draw tic lines-->\r\n          <path \r\n            v-for=\"(item, index) in xTics\"\r\n            :key=\"index\"\r\n            class=\"ticLines\"\r\n            :d=\"drawXtic(item)\"\r\n          />\r\n          <!--draw tic labels-->\r\n          <text\r\n            v-for=\"(item, index) in xTics\"\r\n            :key=\"index\"\r\n            class=\"ticLabels\"\r\n            :x=\"item.loc\"\r\n            :y=\"20\"\r\n          >\r\n            {{ item.label }}\r\n          </text>\r\n          <!--draw x axis label-->\r\n          <text\r\n            class=\"axisTitle\"\r\n            :x=\"ctrWidth / 2\"\r\n            :y=\"50\"\r\n          >\r\n            {{ xLabel }}\r\n          </text>\r\n        </g>\r\n\r\n        <!--draw y axis-->\r\n        <g\r\n          id=\"yAxisGroup\"\r\n          :transform=\"translateYAxis\"\r\n        >\r\n          <!--draw vertical line-->\r\n          <path\r\n            class=\"ticLines\"\r\n            :d=\"drawYaxis\"\r\n          />\r\n          <!--draw tic lines-->\r\n          <path\r\n            v-for=\"(item, index) in yTics\"\r\n            :key=\"index\"\r\n            class=\"ticLines\"\r\n            :d=\"drawYtic(item)\"\r\n          />\r\n          <!--draw tic labels-->\r\n          <text\r\n            v-for=\"(item, index) in yTics\"\r\n            :key=\"index\"\r\n            class=\"ticLabels\"\r\n            :x=\"-20\"\r\n            :y=\"item.loc\"\r\n          >\r\n            {{ item.label }}\r\n          </text>\r\n          <!--draw y axis label-->\r\n          <text\r\n            :x=\"-ctrHeight / 2\"\r\n            :y=\"-marginLeft + 15\"\r\n            :style=\"yLabelStyle\"\r\n          >\r\n            {{ yLabel }}\r\n          </text>\r\n        </g>\r\n\r\n        <!--draw points-->\r\n        <g\r\n          id=\"pointsGroup\"\r\n          :transform=\"translatePoints\"\r\n        >\r\n          <circle \r\n            v-for=\"(item,index) in x\"\r\n            :key=\"index\"\r\n            class=\"points\"\r\n            :fill=\"xyColor[index]\"\r\n            :cx=\"(x[index] - xLimits.min) * xScale\"\r\n            :cy=\"ctrHeight - (y[index] - yLimits.min) * yScale\"\r\n            :r=\"pointSize\"\r\n            @mouseover=\"mouse_over_point($event,index)\"\r\n            @mouseleave=\"mouse_leave_point($event)\"\r\n          />\r\n        </g>\r\n        \r\n        <!--draw fit data-->\r\n        <g\r\n          v-if=\"fitData\"\r\n          id=\"fitGroup\"\r\n          :transform=\"translatePoints\"\r\n        >\r\n          <line\r\n            v-for=\"(item,index) in getFittedData\"\r\n            :key=\"index\"\r\n            :style=\"{stroke: fitPointColor}\"\r\n            :x1=\"(item.x1 - xLimits.min) * xScale\"\r\n            :y1=\"ctrHeight - (item.y1 - yLimits.min) * yScale\"\r\n            :x2=\"(item.x2 - xLimits.min) * xScale\"\r\n            :y2=\"ctrHeight - (item.y2 - yLimits.min) * yScale\"\r\n          />\r\n        </g>\r\n        \r\n        <!--draw legend-->\r\n        <g\r\n          v-if=\"grouping\"\r\n          id=\"legend\"\r\n          @mousedown=\"mouse_legend_down($event)\"\r\n          @mousemove=\"mouse_legend_move($event)\"\r\n          @mouseup=\"mouse_legend_end($event)\"\r\n          @mouseout=\"mouse_legend_end($event)\"\r\n        >\r\n          >\r\n          <circle\r\n            v-for=\"(item,key,index) in grouping\"\r\n            :key=\"index\"\r\n            :fill=\"item.color\"\r\n            :cx=\".85 * ctrWidth\"\r\n            :cy=\"0.2 * ctrHeight + index * 30 - 5\"\r\n            :r=\"pointSize\"\r\n          />\r\n          <text\r\n            v-for=\"(item,key,index) in grouping\"\r\n            :key=\"index\"\r\n            :style=\"{stroke: item.color}\"\r\n            :x=\".85 * ctrWidth + 20\"\r\n            :y=\"0.2 * ctrHeight + index * 30\"\r\n          >\r\n            {{ key }}\r\n          </text>\r\n          \r\n        </g>\r\n      </g>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport nice_ticks from './nice_ticks';\r\nimport {mouse_down, mouse_move, mouse_end} from './mouse_move_event';\r\n\r\nexport default {\r\n  name: 'PointsPlotComp',\r\n  \r\n  props: {\r\n    x: {\r\n      type: Array,\r\n      default: null,\r\n      required: true\r\n    },\r\n    y: {\r\n      type: Array,\r\n      default: null,\r\n      required: true\r\n    },\r\n    grp: {\r\n      type: Array,\r\n      default: null\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    subTitle: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    xLabel: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    yLabel: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    xAxis: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    yAxis: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 800\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 600\r\n    },\r\n    marginLeft: {\r\n      type: Number,\r\n      default:60\r\n    },\r\n    marginBottom: {\r\n      type: Number,\r\n      default: 60\r\n    },\r\n    pointSize: {\r\n      type: Number,\r\n      default: 4\r\n    },\r\n    pointColor: {\r\n      type: String,\r\n      default: '#000000'\r\n    },\r\n    fitData: {\r\n      type: Array,\r\n      default:() => {\r\n        return null;\r\n      }\r\n    },\r\n    fitPointColor: {\r\n      type: String,\r\n      default: '#FF1940'\r\n    },\r\n    grouping: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    },\r\n    cssVariables: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  emits: {\r\n    'PointsPlotCompHover': null\r\n  },\r\n  data() {\r\n    return {\r\n      fit_data: null,\r\n      titleY: 20,\r\n      subtitleY: 45,\r\n      yLoc: 10,\r\n      ctrWidth: 0,\r\n      ctrHeight: 0,\r\n      yLabelStyle: {\r\n        transform: 'rotate(270deg)',\r\n        textAnchor: 'middle',\r\n        fontSize: '16px',\r\n        fontWeight: 'bold'\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    drawXaxis(){\r\n      return `M 0 0 H ${this.ctrWidth}`\r\n    },\r\n    drawYaxis(){\r\n      return `M 0 0 V ${this.ctrHeight}`\r\n    },\r\n    xScale() {\r\n      return this.ctrWidth / (this.xLimits.max - this.xLimits.min);\r\n    },\r\n    xLimits() {\r\n      const xaxis = {\r\n        min: 0,\r\n        max: 1,\r\n        step: 1\r\n      };\r\n      if(this.xAxis !== null){\r\n        xaxis.min = this.xAxis.min;\r\n        xaxis.max = this.xAxis.max;\r\n        xaxis.step = this.xAxis.step;\r\n      }else if(this.x !== null){\r\n        const nice_tics = nice_ticks(this.x, 10);\r\n        xaxis.min = nice_tics.min;\r\n        xaxis.max = nice_tics.max;\r\n        xaxis.step = nice_tics.step;\r\n      }\r\n      return xaxis;\r\n    },\r\n    xTics() {\r\n      const xtics = [];\r\n      const xN = Math.round((this.xLimits.max - this.xLimits.min) / this.xLimits.step);\r\n      for(let i=0; i < xN + 1; i++){\r\n        const value = this.xLimits.min + i * this.xLimits.step;\r\n        xtics.push({\r\n          loc: (value - this.xLimits.min) * this.xScale,\r\n          label: value,\r\n        });\r\n      }\r\n      return xtics;\r\n    },\r\n    yScale() {\r\n      return this.ctrHeight / (this.yLimits.max - this.yLimits.min);\r\n    },\r\n    yLimits(){\r\n      const yaxis = {\r\n        min: 0,\r\n        max: 1,\r\n        step: 1\r\n      };\r\n      if(this.yAxis !== null){\r\n        yaxis.min = this.yAxis.min;\r\n        yaxis.max = this.yAxis.max;\r\n        yaxis.step = this.yAxis.step;\r\n      }else if(this.y !== null){\r\n        //console.log(`y: ${this.y}`);\r\n        const nice_tics = nice_ticks(this.y, 10);\r\n        yaxis.min = nice_tics.min;\r\n        yaxis.max = nice_tics.max;\r\n        yaxis.step = nice_tics.step;\r\n        //console.log(`ymin: ${yaxis.min} ymax: ${yaxis.max} step: ${yaxis.step}`);\r\n      }\r\n      return yaxis;\r\n    },\r\n    yTics() {\r\n      const ytics = [];\r\n      const yN = Math.round((this.yLimits.max - this.yLimits.min) / this.yLimits.step);\r\n      //console.log(`yN: ${yN} yScale: ${this.yScale}`);\r\n      for(let i=0; i < yN + 1; i++){\r\n        const value = this.yLimits.min + i * this.yLimits.step;\r\n       // console.log(`value: ${value}`);\r\n        ytics.push({\r\n          loc: this.ctrHeight - (i * this.yLimits.step * this.yScale),\r\n          label: value\r\n        });\r\n      }\r\n      return ytics;\r\n    },\r\n    xyColor() {\r\n      const xycolor = [];\r\n      if(this.grp !== null) {\r\n        for (let i=0; i < this.grp.length; i++) {\r\n          const colorIdx = Object.keys(this.grouping).indexOf(this.grp[i]);\r\n          if (colorIdx !== -1) {\r\n            xycolor.push(this.grouping[this.grp[i]].color)\r\n          } else {\r\n            xycolor.push('#000000')\r\n          }\r\n        }\r\n      }\r\n      return xycolor;\r\n    },\r\n    translateXAxis(){\r\n      return `translate(${this.marginLeft} ${this.ctrHeight + this.yLoc})`\r\n    },\r\n    translateYAxis(){\r\n      return `translate(${this.marginLeft} ${this.yLoc})`\r\n    },\r\n    translatePoints(){\r\n      return `translate(${this.marginLeft} ${this.yLoc})`\r\n    },\r\n    getFittedData(){\r\n      const fitted_data = [];\r\n      for(let i=1; i < this.fitData.length; i++){\r\n        const obj = {};\r\n        obj.x1 = this.fitData[i - 1].x;\r\n        obj.y1 = this.fitData[i - 1].y;\r\n        obj.x2 = this.fitData[i].x;\r\n        obj.y2 = this.fitData[i].y;\r\n        fitted_data.push(obj);\r\n      }\r\n      return fitted_data;\r\n    }\r\n  },\r\n  mounted() {\r\n    if(this.cssVariables !== null){\r\n      for(let key of Object.keys(this.cssVariables)){\r\n        this.$el.style.setProperty(`--${key}`, this.cssVariables[key]);\r\n      }\r\n    }\r\n\r\n    if(this.title !== null) this.yLoc = this.yLoc + this.titleY;\r\n    if(this.subTitle !== null) this.yLoc = this.yLoc + this.subtitleY;\r\n    this.ctrWidth = this.width - this.marginLeft - 10;\r\n    this.ctrHeight = this.height - this.marginBottom - this.yLoc\r\n  },\r\n  methods: {\r\n    drawXtic(item){\r\n      return `M ${item.loc} 0 V 10 Z`\r\n    },\r\n    drawYtic(item){\r\n      //console.log(`tic label: ${item.label}`)\r\n      return `M 0 ${item.loc} H -10 Z`\r\n    },\r\n    mouse_legend_down(e){\r\n      return mouse_down(e)\r\n    },\r\n    mouse_legend_move(e){\r\n      return mouse_move(e);\r\n    },\r\n    mouse_legend_end(e){\r\n      return mouse_end(e);\r\n    },\r\n    mouse_over_point(e, index){\r\n      this.$emit('PointsPlotCompHover',{x: this.x[index], y: this.y[index]});\r\n    },\r\n    mouse_leave_point(e){\r\n      this.$emit('PointsPlotCompHover',{x: \"\", y: \"\"});\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --points_plot_comp_font_family: Verdana,serif;\r\n    --points_plot_comp_background: white;\r\n    --points_plot_comp_axis_color: black;\r\n    --points_plot_comp_point_opacity: 0.6;\r\n\r\n    --points_plot_comp_title_color: black;\r\n  }\r\n\r\n  #container {\r\n    font-family: var(--points_plot_comp_font_family);\r\n    background-color: var(--points_plot_comp_background);\r\n  }\r\n  .titles {\r\n    text-anchor: middle;\r\n    font-weight: bold;\r\n    fill: var(--points_plot_comp_title_color);\r\n  }\r\n  .ticLines {\r\n    stroke: var(--points_plot_comp_axis_color);\r\n  }\r\n  .ticLabels {\r\n    text-anchor: middle;\r\n    font-weight: bold;\r\n    font-size: 11px;\r\n    color: var(--points_plot_comp_axis_color);\r\n  }\r\n  .axisTitle {\r\n    text-anchor: middle;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    color: var(--points_plot_comp_axis_color);\r\n  }\r\n  .points {\r\n    opacity: var(--points_plot_comp_point_opacity);\r\n    cursor: pointer;\r\n  }\r\n  #legend {\r\n    cursor: move;\r\n    background: transparent;\r\n  }\r\n</style>",":root {\n  --button_comp_font_family: Verdana, serif;\n  --button_comp_font_size: 1rem;\n  --button_comp_background: linear-gradient(to bottom, #969696 0, #969696 13%, #5f5f5f 33%, #1e1e1e 64%, #1e1e1e 100%);\n  --button_comp_color: #ffffffe6;\n  --button_comp_box_shadow: 4px 4px 6px 1px #0006, 2px 2px 2px 0 #0003;\n  --button_comp_hover_background: linear-gradient(to bottom, #969696 0, #1e1e1e 100%);\n}\n\n.buttonComp {\n  width: max-content;\n  height: max-content;\n  text-align: center;\n  cursor: pointer;\n  font-family: var(--button_comp_font_family);\n  font-size: var(--button_comp_font_size);\n  background: var(--button_comp_background);\n  color: var(--button_comp_color);\n  box-shadow: var(--button_comp_box_shadow);\n  border-radius: 5px;\n  padding: .5rem;\n}\n\n.buttonComp:hover {\n  background: var(--button_comp_hover_background);\n}\n\n","<template>\r\n  <div \r\n    class=\"buttonComp\"\r\n    @click=\"div_clicked($event)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'ButtonComp',\r\n    props: {\r\n      cssVariables: {\r\n        type: Object,\r\n        default: null\r\n      }\r\n    },\r\n    emits: {\r\n      'buttonCompClicked': null\r\n    },\r\n    mounted() {\r\n      if(this.cssVariables !== null){\r\n        for(let key of Object.keys(this.cssVariables)){\r\n          this.$el.style.setProperty(`--${key}`, this.cssVariables[key]);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      div_clicked: function(event){\r\n        this.$emit('buttonCompClicked',event);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --button_comp_font_family: Verdana,serif;\r\n    --button_comp_font_size: 1rem;\r\n    --button_comp_background: linear-gradient(to bottom, #969696 0, #969696 13%, #5f5f5f 33%, #1e1e1e 64%, #1e1e1e 100%);\r\n    --button_comp_color: rgba(255, 255, 255, 0.901961);\r\n    --button_comp_box_shadow: 4px 4px 6px 1px rgba(0, 0, 0, 0.4) , 2px 2px 2px 0 rgba(0,0,0,0.2);\r\n    --button_comp_hover_background: linear-gradient(to bottom, #969696 0, #1e1e1e 100%);\r\n  }\r\n  .buttonComp {\r\n    width: max-content;\r\n    height: max-content;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n    font-family: var(--button_comp_font_family);\r\n    font-size: var(--button_comp_font_size);\r\n    background: var(--button_comp_background);\r\n    color: var(--button_comp_color);\r\n    box-shadow: var(--button_comp_box_shadow);\r\n  }\r\n  .buttonComp:hover {\r\n    background: var(--button_comp_hover_background);\r\n  }\r\n</style>",":root {\n  --table_comp_font_family: Verdana, serif;\n  --table_comp_title_font_size: 1rem;\n  --table_comp_title_color: black;\n  --table_comp_sub_title_font_size: .6rem;\n  --table_comp_thead_color: black;\n  --table_comp_thead_border_bottom: 1px solid black;\n  --table_comp_thead_background: linear-gradient(to bottom, #f5f6f6 0%, #dbdce2 21%, #b8bac6 49%, #dddfe3 80%, #f5f6f6 100%);\n  --table_comp_thead_text_align: left;\n  --table_comp_row_color: black;\n  --table_comp_row_selected_color: green;\n  --table_comp_row_border_bottom: 1px solid black;\n  --table_comp_row_odd_background: linear-gradient(to bottom, #cedce7 0%, #596a72 100%);\n  --table_comp_row_even_background: linear-gradient(to bottom, #cedce7 0%, #596a72 100%);\n  --table_comp_row_hover_color: linear-gradient(to bottom, #b4e391 0%, #61c419 50%, #b4e391 100%);\n  --table_comp_cell_font_size: .75rem;\n}\n\n.tableComp {\n  font-family: var(--table_comp_font_family);\n  flex-direction: column;\n  display: flex;\n}\n\n.tableComp_title {\n  font-size: var(--table_comp_title_font_size);\n  color: var(--table_comp_title_color);\n  align-self: center;\n  margin-bottom: .8rem;\n  font-weight: bold;\n}\n\n.tableComp_subtitle {\n  font-size: var(--table_comp_sub_title_font_size);\n  color: var(--table_comp_title_color);\n  align-self: center;\n  margin-bottom: .8rem;\n  font-weight: bold;\n}\n\n.tableComp_table {\n  border-collapse: collapse;\n}\n\n.tableComp_thead tr {\n  display: block;\n}\n\n.tableComp_thead tr th {\n  color: var(--table_comp_thead_color);\n  border-bottom: var(--table_comp_thead_border_bottom);\n  background: var(--table_comp_thead_background);\n  cursor: pointer;\n  padding: 2px;\n}\n\n.tableComp_tbody {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.tableComp_tbody::-webkit-scrollbar-track {\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.tableComp_tbody::-webkit-scrollbar {\n  height: 12px;\n  width: 12px;\n  background-color: #0000;\n}\n\n.tableComp_tbody::-webkit-scrollbar-thumb {\n  background-color: #d62929;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.tableComp_tbody tr {\n  cursor: pointer;\n  border-bottom: var(--table_comp_row_border_bottom);\n}\n\n.tableComp_tbody tr:nth-child(2n+1) {\n  background: var(--table_comp_row_odd_background);\n}\n\n.tableComp_tbody tr:nth-child(2n) {\n  background: var(--table_comp_row_even_background);\n}\n\n.tableComp_tbody tr:hover {\n  background: var(--table_comp_row_hover_color);\n}\n\n.tableComp_tbody tr td {\n  font-size: var(--table_comp_cell_font_size);\n  text-align: center;\n  padding: 2px;\n}\n\n.tableComp_tr__selected {\n  color: var(--table_comp_row_selected_color);\n}\n\n.tableComp_tr__notselected {\n  color: var(--table_comp_row_color);\n}\n\n","<template>\r\n  <div>\r\n    <div \r\n      v-if=\"rows_clone !== null\"\r\n      class=\"tableComp\"\r\n      :style=\"table_width_style\"\r\n    >\r\n      <div \r\n        v-if=\"title !== null\"\r\n        class=\"tableComp_title\"\r\n      >\r\n        {{ title }}\r\n      </div>\r\n      <div\r\n        v-if=\"subTitle !== null\"\r\n        class=\"tableComp_subtitle\"\r\n      >\r\n        {{ subTitle }}\r\n      </div>\r\n      <table class=\"tableComp_table\">\r\n        <thead \r\n          v-if=\"headings !== null\" \r\n          class=\"tableComp_thead\"\r\n        >\r\n          <tr>\r\n            <th\r\n              v-for=\"(head,col_index) in headings\"\r\n              :key=\"col_index\"\r\n              :style=\"head_styles[col_index]\"\r\n              @click=\"sort_column(col_index)\"\r\n            >\r\n              {{ head }}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody\r\n          class=\"tableComp_tbody\" \r\n          :style=\"tbody_style\"\r\n        >\r\n          <tr\r\n            v-for=\"(row,row_index) in rows_clone\"\r\n            :key=\"row_index\"\r\n            class=\"tableComp_tr__notselected\"\r\n            @click=\"row_clicked($event,row_index)\"\r\n          >\r\n            <td\r\n              v-for=\"(key,col_index) in Object.keys(row)\"\r\n              :key=\"col_index\"\r\n              :style=\"td_styles[row_index][col_index]\"\r\n              :class=\"class_names[row_index][col_index]\"\r\n              @click=\"cell_clicked(row_index,col_index)\"\r\n            >\r\n              {{ row[key] }}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'TableComp',\r\n    props: {\r\n      rows: {\r\n        type: Array,\r\n        default: null\r\n      },\r\n      title: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      subTitle: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      tableHeight: {\r\n        type: Number,\r\n        default: 300\r\n      },\r\n      headings: {\r\n        type: Array,\r\n        default: null\r\n      },\r\n      columnWidths: {\r\n        type: Array,\r\n        default: null\r\n      },\r\n      cellClass: {\r\n        type: Object,\r\n        default: null\r\n      },\r\n      cssVariables: {\r\n        type: Object,\r\n        default: null\r\n      }\r\n    },\r\n    emits: {\r\n      'tableCompRow': null,\r\n      'tableCompCell': null,\r\n      'tableCompSort': null,\r\n    },\r\n    data(){\r\n      return {\r\n        rows_clone: null,\r\n        selected_tr: null,\r\n        sort_col_idx: 0,\r\n        sort_descending: false,\r\n        class_names: null\r\n      };\r\n    },\r\n    computed: {\r\n      n_cols: function(){\r\n        return Object.keys(this.rows[0]).length;\r\n      },\r\n      n_rows: function(){\r\n        return this.rows.length;\r\n      },\r\n      table_width_style: function(){\r\n        let width_style = '';\r\n        if(this.columnWidths === null){\r\n          width_style = `width:${(120 * this.n_cols)}px;`;\r\n        }else{\r\n          let total = 0;\r\n          for(let i=0; i < this.n_cols; i++) {\r\n            if(this.columnWidths[i] === null) {\r\n              total += 120;\r\n            }else {\r\n              total += this.columnWidths[i];\r\n            }\r\n          }\r\n          width_style = `width:${total + 8}px;`;\r\n        }\r\n        return width_style;\r\n      },\r\n      head_styles: function(){\r\n        return this.row_style();\r\n      },\r\n      td_styles: function(){\r\n        const style = this.row_style();\r\n        const styles = [];\r\n        for(let i =0; i < this.n_rows; i++){\r\n          styles.push(style);\r\n        }\r\n        return styles;\r\n      },\r\n      tbody_style: function(){\r\n        return `height: ${this.tableHeight}px;`;\r\n      }\r\n    },\r\n    watch: {\r\n      rows(rows){\r\n        this.rows_clone = JSON.parse(JSON.stringify(rows));\r\n        this.class_names = new Array(rows.length);\r\n        rows.forEach((row, i) => {\r\n          const keys = Object.keys(row);\r\n          const names = new Array(keys.length)\r\n          keys.forEach((key,ii) => {\r\n            names[ii] = '';\r\n          })\r\n          this.class_names[i] = names;\r\n        })\r\n      },\r\n      cellClass(cellClass){\r\n        if(cellClass === null){\r\n          this.class_names = new Array(this.rows.length);\r\n          this.rows.forEach((row, i) => {\r\n            const keys = Object.keys(row);\r\n            const names = new Array(keys.length)\r\n            keys.forEach((key,ii) => {\r\n              names[ii] = '';\r\n            })\r\n            this.class_names[i] = names;\r\n          })\r\n        }else {\r\n          const row = cellClass['row'];\r\n          const col = cellClass['col'];\r\n          this.class_names[row][col] = cellClass['name'];\r\n        }\r\n      }\r\n    },\r\n    mounted(){\r\n      if(this.cssVariables !== null){\r\n        for(let key of Object.keys(this.cssVariables)){\r\n          this.$el.style.setProperty(`--${key}`, this.cssVariables[key]);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      row_style: function(){\r\n        let style= [];\r\n        if(this.columnWidths === null){\r\n          for(let i=0; i < this.n_cols; i++){\r\n            style.push('width:120px');\r\n          }\r\n        }else {\r\n          for(let i=0; i < this.n_cols; i++){\r\n            if(this.columnWidths[i] === null){\r\n              style.push('width:120px');\r\n            }else{\r\n              style.push(`width:${this.columnWidths[i]}px`);\r\n            }\r\n          }\r\n        }\r\n        return style;\r\n      },\r\n      sort_column: function(col_index){\r\n        const keys = Object.keys(this.rows[0]);\r\n        const key = keys[col_index];\r\n        const rows = JSON.parse(JSON.stringify(this.rows));\r\n        rows.sort((a, b) => {\r\n          let x = a[key];\r\n          let y = b[key];\r\n          if (typeof x === 'string') {\r\n            x = x.toLowerCase();\r\n          }\r\n          if (typeof y === 'string') {\r\n            y = y.toLowerCase();\r\n          }\r\n\r\n          if(this.sort_descending){\r\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n          }else{\r\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n          }\r\n        });\r\n\r\n        this.rows_clone = rows;\r\n\r\n        const info = {\r\n          column: key,\r\n          index: col_index,\r\n          descending: this.sort_descending\r\n        }\r\n        this.$emit('tableCompSort', info);\r\n        if(col_index === this.sort_col_idx){\r\n          this.sort_descending = !this.sort_descending;\r\n        }else{\r\n          this.sort_col_idx = col_index;\r\n        }\r\n      },\r\n      //child to parent -- send selected row\r\n      row_clicked: function(e,row_index){\r\n        const row_values = [];\r\n        const row = this.rows_clone[row_index];\r\n        for(let key of Object.keys(row)){\r\n          row_values.push(row[key]);\r\n        }\r\n        if(this.selected_tr){\r\n          this.selected_tr.classList.remove('tableComp_tr__selected');\r\n          this.selected_tr.classList.add('tableComp_tr__notselected');\r\n        }\r\n        e.currentTarget.classList.remove('tableComp_tr__notselected');\r\n        e.currentTarget.classList.add('tableComp_tr__selected');\r\n        this.selected_tr = e.currentTarget;\r\n\r\n        this.$emit('tableCompRow',\r\n          {\r\n            row_index: row_index,\r\n            row_values: row_values\r\n          }\r\n        );\r\n      },\r\n      //child to parent -- send selected cell\r\n      cell_clicked: function(row_index, col_index){\r\n        const key = Object.keys(this.rows_clone[row_index])[col_index];\r\n        const info = {\r\n          row_index: row_index,\r\n          col_index: col_index,\r\n          cell_value: this.rows_clone[row_index][key],\r\n          cell_class: this.class_names[row_index][col_index]\r\n        };\r\n        this.$emit('tableCompCell',info);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n<style lang=\"less\">\r\n  :root {\r\n    --table_comp_font_family: Verdana,serif;\r\n    --table_comp_title_font_size: 1rem;\r\n    --table_comp_title_color: black;\r\n\r\n    --table_comp_sub_title_font_size: .6rem;\r\n    \r\n    --table_comp_thead_color: black;\r\n    --table_comp_thead_border_bottom: 1px solid black;\r\n    --table_comp_thead_background: linear-gradient(to bottom, #f5f6f6 0%,#dbdce2 21%,#b8bac6 49%,#dddfe3 80%,#f5f6f6 100%);\r\n    --table_comp_thead_text_align: left;\r\n\r\n    --table_comp_row_color: black;\r\n    --table_comp_row_selected_color: green;\r\n    --table_comp_row_border_bottom: 1px solid black;\r\n    --table_comp_row_odd_background: linear-gradient(to bottom, #cedce7 0%,#596a72 100%);\r\n    --table_comp_row_even_background: linear-gradient(to bottom, #cedce7 0%,#596a72 100%);\r\n    --table_comp_row_hover_color: linear-gradient(to bottom, #b4e391 0%,#61c419 50%,#b4e391 100%);\r\n    --table_comp_cell_font_size: .75rem;\r\n  }\r\n  .tableComp {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-family: var(--table_comp_font_family);\r\n\r\n    &_title {\r\n      font-size: var(--table_comp_title_font_size);\r\n      color: var(--table_comp_title_color);\r\n      font-weight: bold;\r\n      align-self: center;\r\n      margin-bottom: .8rem;\r\n    }\r\n\r\n    &_subtitle {\r\n      font-size: var(--table_comp_sub_title_font_size);\r\n      color: var(--table_comp_title_color);\r\n      font-weight: bold;\r\n      align-self: center;\r\n      margin-bottom: .8rem;\r\n    }\r\n    \r\n    &_table {\r\n      border-collapse: collapse;\r\n    }\r\n\r\n    &_thead {\r\n      tr {\r\n        display: block;\r\n        th {\r\n          color: var(--table_comp_thead_color);\r\n          border-bottom: var(--table_comp_thead_border_bottom);\r\n          background: var(--table_comp_thead_background);\r\n          padding: 2px;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n\r\n    &_tbody {\r\n      display: block;\r\n      overflow-y: auto;\r\n      overflow-x: hidden;\r\n      &::-webkit-scrollbar-track {\r\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n        border-radius: 10px;\r\n        background-color: #F5F5F5;\r\n      }\r\n      &::-webkit-scrollbar {\r\n        height: 12px;\r\n        width: 12px;\r\n        background-color: transparent;\r\n      }\r\n      &::-webkit-scrollbar-thumb {\r\n        border-radius: 10px;\r\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n        background-color: #D62929;\r\n      }\r\n      tr {\r\n        cursor: pointer;\r\n        border-bottom: var(--table_comp_row_border_bottom);\r\n\r\n        &:nth-child(odd) {\r\n          background: var(--table_comp_row_odd_background);\r\n        }\r\n        &:nth-child(even) {\r\n          background: var(--table_comp_row_even_background);\r\n        }\r\n        &:hover {\r\n          background: var(--table_comp_row_hover_color);\r\n        }\r\n        td {\r\n          font-size: var(--table_comp_cell_font_size);\r\n          padding: 2px;\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n\r\n    &_tr__selected {\r\n      color: var(--table_comp_row_selected_color);\r\n    }\r\n    &_tr__notselected {\r\n      color: var(--table_comp_row_color)\r\n    }\r\n  }\r\n</style>",":root {\n  --select_comp_font_family: Verdana, serif;\n  --select_comp_arrow_icon: \"â‡“\";\n  --select_comp_arrow_color: black;\n  --select_comp_width: 10rem;\n  --select_comp_font_size: 1rem;\n  --select_comp_color: darkgray;\n  --select_comp_background: transparent;\n  --select_comp_border_color: black;\n  --select_comp_heading_font_size: 1rem;\n  --select_comp_heading_color: black;\n  --select_comp_heading_font_weight: bold;\n  --select_comp_items_panel_color: black;\n  --select_comp_items_panel_width: 8rem;\n  --select_comp_items_panel_background: white;\n  --select_comp_items_panel_border: 1px solid black;\n  --select_comp_items_panel_position: static;\n  --select_comp_items_panel_z_index: auto;\n  --select_comp_item_font_size: .75rem;\n  --select_comp_item_hover_box_shadow: 0 0 10px gray;\n  --select_comp_item_hover_color: violet;\n}\n\n.selectComp {\n  width: var(--select_comp_width);\n  font-family: var(--select_comp_font_family);\n}\n\n.selectComp:focus {\n  outline: none;\n}\n\n.selectComp_headingBox {\n  text-align: center;\n  color: var(--select_comp_heading_color);\n  font-size: var(--select_comp_heading_font_size);\n  font-weight: var(--select_comp_heading_font_weight);\n}\n\n.selectComp_selectBoxSec {\n  color: var(--select_comp_color);\n  background: var(--select_comp_background);\n  font-size: var(--select_comp_font_size);\n  border: 1px solid var(--select_comp_border_color);\n  flex-direction: row;\n  display: flex;\n}\n\n.selectComp_selectBoxSecBottomBorder {\n  color: var(--select_comp_color);\n  background: var(--select_comp_background);\n  font-size: var(--select_comp_font_size);\n  border: none;\n  border-bottom: 1px solid var(--select_comp_border_color);\n  flex-direction: row;\n  display: flex;\n}\n\n.selectComp_selectBox {\n  padding: .2rem;\n}\n\n.selectComp_arrowIcon__open:before {\n  content: var(--select_comp_arrow_icon);\n  color: var(--select_comp_arrow_color);\n  cursor: pointer;\n  margin-right: .2rem;\n  font-size: 1rem;\n  transition: all .6s linear;\n  display: inline-block;\n}\n\n.selectComp_arrowIcon__closed:before {\n  content: var(--select_comp_arrow_icon);\n  color: var(--select_comp_arrow_color);\n  cursor: pointer;\n  margin-right: .2rem;\n  font-size: 1rem;\n  transition: all .6s linear;\n  display: inline-block;\n  transform: rotate(-90deg);\n}\n\n.selectComp_itemsSec {\n  position: relative;\n}\n\n.selectComp_itemsPanel {\n  color: var(--select_comp_items_panel_color);\n  background: var(--select_comp_items_panel_background);\n  border: var(--select_comp_items_panel_border);\n  position: var(--select_comp_items_panel_position);\n  z-index: var(--select_comp_items_panel_z_index);\n  width: var(--select_comp_items_panel_width);\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  padding: .5rem;\n  transition: all 2s ease-in-out;\n  overflow: auto;\n}\n\n.selectComp_itemsPanel::-webkit-scrollbar-track {\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.selectComp_itemsPanel::-webkit-scrollbar {\n  width: 12px;\n  height: 12px;\n  background-color: #0000;\n}\n\n.selectComp_itemsPanel::-webkit-scrollbar-thumb {\n  background-color: #d62929;\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px #0000004d;\n}\n\n.selectComp_itemBox {\n  cursor: pointer;\n  font-size: var(--select_comp_item_font_size);\n  margin: .3rem;\n}\n\n.selectComp_itemBox:hover {\n  color: var(--select_comp_item_hover_color);\n  box-shadow: var(--select_comp_item_hover_box_shadow);\n}\n\n","<template>\r\n  <div>\r\n    <div \r\n      class=\"selectComp\" \r\n      tabindex=\"0\" \r\n      @blur=\"blur_it\"\r\n    >\r\n      <div \r\n        v-if=\"heading\" \r\n        class=\"selectComp_headingBox\"\r\n      >\r\n        {{ heading }}\r\n      </div>\r\n      <section :class=\"select_box_class\">\r\n        <div \r\n          :class=\"is_open ? 'selectComp_arrowIcon__open' : 'selectComp_arrowIcon__closed'\" \r\n          @click=\"arrow_click\"\r\n        />\r\n        <div class=\"selectComp_selectBox\">\r\n          {{ current_value }}\r\n        </div>\r\n      </section>\r\n      <section \r\n        v-show=\"items\" \r\n        class=\"selectComp_itemsSec\"\r\n      >\r\n        <div \r\n          class=\"selectComp_itemsPanel\" \r\n          :style=\"panel_style\"\r\n        >\r\n          <div\r\n            v-for=\"(item,idx) in items\"\r\n            :key=\"idx\"\r\n            class=\"selectComp_itemBox\"\r\n            @click=\"item_click(item)\"\r\n          >\r\n            {{ item }}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'SelectComp',\r\n    props: {\r\n      items: {\r\n        type: Array,\r\n        default: null\r\n      },\r\n      selectValue: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      heading: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      placeholder: {\r\n        type: String,\r\n        default: () => {\r\n          return null;\r\n        }\r\n      },\r\n      dropPanelHeight: {\r\n        type: String,\r\n        default: '6.5rem'\r\n      },\r\n      blurPanel: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      singleBorder: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      cssVariables: {\r\n        type: Object,\r\n        default: () => {\r\n          return null;\r\n        }\r\n      }\r\n    },\r\n    emits: {\r\n      'selectCompValueChanged': null\r\n    },\r\n    data(){\r\n      return {\r\n        current_value: null,\r\n        is_open: false,\r\n        panel_style: 'max-width: 0;max-height: 0; transition: all 3s; opacity: 0;',\r\n        select_box_class: 'selectComp_selectBoxSec'\r\n      };\r\n    },\r\n    watch: {\r\n      selectValue: function(){\r\n        if(this.current_value !== this.selectValue){\r\n          if(this.selectValue === null && this.placeholder !== null){\r\n            this.current_value = this.placeholder;\r\n            this.$emit('selectCompValueChanged',null);\r\n          }else if(this.items !== null){\r\n            const idx = this.items.indexOf(this.selectValue);\r\n            if(idx !== -1){\r\n              this.current_value = this.selectValue;\r\n              this.$emit('selectCompValueChanged',this.current_value);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    mounted(){\r\n      if(this.selectValue === null && this.placeholder !== null){\r\n        this.current_value = this.placeholder;\r\n      }else{\r\n        if(this.items !== null){\r\n          const idx = this.items.indexOf(this.selectValue);\r\n          if(idx !== -1){\r\n            this.current_value = this.selectValue;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(this.singleBorder){\r\n        this.select_box_class = 'selectComp_selectBoxSecBottomBorder';\r\n      }\r\n\r\n      if(this.cssVariables !== null){\r\n        for(let key of Object.keys(this.cssVariables)){\r\n          this.$el.style.setProperty(`--${key}`, this.cssVariables[key]);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      blur_it: function(){\r\n        if(this.is_open && this.blurPanel){\r\n          this.is_open = false;\r\n          this.panel_style = 'max-width: 0;max-height: 0;transition: all 3s; opacity: 0;';\r\n        }\r\n      },\r\n      arrow_click: function(){\r\n        this.toggle_panel_state();\r\n      },\r\n      item_click: function(item){\r\n        this.current_value = item;\r\n        this.$emit('selectCompValueChanged',item);\r\n        this.toggle_panel_state();\r\n      },\r\n      toggle_panel_state: function(){\r\n        if(this.is_open){\r\n          this.is_open = false;\r\n          this.panel_style = 'max-width: 0;max-height: 0;transition: all 3s; opacity: 0;';\r\n        }else {\r\n          this.is_open = true;\r\n          this.panel_style = 'max-width: 100%;max-height: ' + this.dropPanelHeight + '; transition: all 3s; opacity: 1.0;';\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  :root {\r\n    --select_comp_font_family: Verdana,serif;\r\n\r\n    --select_comp_arrow_icon: '\\21D3';\r\n    --select_comp_arrow_color: black;\r\n\r\n    --select_comp_width: 10rem;\r\n    --select_comp_font_size: 1rem;\r\n    --select_comp_color: darkgray;\r\n    --select_comp_background: transparent;\r\n    --select_comp_border_color: black;\r\n\r\n    --select_comp_heading_font_size: 1rem;\r\n    --select_comp_heading_color: black;\r\n    --select_comp_heading_font_weight: bold;\r\n\r\n    --select_comp_items_panel_color: black;\r\n    --select_comp_items_panel_width: 8rem;\r\n    --select_comp_items_panel_background: white;\r\n    --select_comp_items_panel_border: 1px solid black;\r\n    --select_comp_items_panel_position: static;\r\n    --select_comp_items_panel_z_index: auto;\r\n\r\n    --select_comp_item_font_size: .75rem;\r\n    --select_comp_item_hover_box_shadow: 0 0 10px gray;\r\n    --select_comp_item_hover_color: violet;\r\n  }\r\n\r\n  .selectComp {\r\n    width: var(--select_comp_width);\r\n    font-family: var(--select_comp_font_family);\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    &_headingBox {\r\n      text-align: center;\r\n      color: var(--select_comp_heading_color);\r\n      font-size: var(--select_comp_heading_font_size);\r\n      font-weight: var(--select_comp_heading_font_weight);\r\n    }\r\n\r\n    &_selectBoxSec {\r\n      display: flex;\r\n      flex-direction: row;\r\n      color: var(--select_comp_color);\r\n      background: var(--select_comp_background);\r\n      font-size: var(--select_comp_font_size);\r\n      border: 1px solid var(--select_comp_border_color);\r\n    }\r\n\r\n    &_selectBoxSecBottomBorder {\r\n      display: flex;\r\n      flex-direction: row;\r\n      color: var(--select_comp_color);\r\n      background: var(--select_comp_background);\r\n      font-size: var(--select_comp_font_size);\r\n      border: none;\r\n      border-bottom: 1px solid var(--select_comp_border_color);\r\n    }\r\n\r\n    &_selectBox {\r\n      padding: .2rem;\r\n    }\r\n\r\n    &_arrowIcon__open::before {\r\n      content: var(--select_comp_arrow_icon);\r\n      display: inline-block;\r\n      color: var(--select_comp_arrow_color);\r\n      transition: 600ms linear all;\r\n      margin-right: .2rem;\r\n      font-size: 1rem;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &_arrowIcon__closed::before {\r\n      content: var(--select_comp_arrow_icon);\r\n      display: inline-block;\r\n      color: var(--select_comp_arrow_color);\r\n      transform: rotate(-90deg);\r\n      transition: 600ms linear all;\r\n      margin-right: .2rem;\r\n      font-size: 1rem;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &_itemsSec {\r\n      position: relative;\r\n    }\r\n\r\n    &_itemsPanel {\r\n      color: var(--select_comp_items_panel_color);\r\n      background: var(--select_comp_items_panel_background);\r\n      border: var(--select_comp_items_panel_border);\r\n      position: var(--select_comp_items_panel_position);\r\n      z-index: var(--select_comp_items_panel_z_index);\r\n      border-bottom-left-radius: 4px;\r\n      border-bottom-right-radius: 4px;\r\n      padding: .5rem;\r\n      width: var(--select_comp_items_panel_width);\r\n      transition: all 2s ease-in-out;\r\n      overflow: auto;\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background-color: #F5F5F5;\r\n        border-radius: 10px;\r\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n      }\r\n      &::-webkit-scrollbar {\r\n        background-color: transparent;\r\n        width: 12px;\r\n        height: 12px;\r\n      }\r\n      &::-webkit-scrollbar-thumb {\r\n        background-color: #D62929;\r\n        border-radius: 10px;\r\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);\r\n      }\r\n    }\r\n\r\n    &_itemBox {\r\n      cursor: pointer;\r\n      margin: .3rem;\r\n      font-size: var(--select_comp_item_font_size);\r\n\r\n      &:hover {\r\n        color: var(--select_comp_item_hover_color);\r\n        box-shadow: var(--select_comp_item_hover_box_shadow);\r\n      }\r\n    }\r\n  }\r\n</style>",":root {\n  --input_comp_width: 10rem;\n  --input_comp_font_family: Verdana, serif;\n  --input_comp_heading_color: black;\n  --input_comp_heading_font_size: 1rem;\n  --input_comp_heading_font_weight: bold;\n  --input_comp_input_font_size: .8rem;\n  --input_comp_input_font_weight: normal;\n  --input_comp_input_color: black;\n  --input_comp_input_background: transparent;\n  --input_comp_input_border_color: black;\n  --input_comp_input_placeholder_color: black;\n  --input_comp_input_focus_outline: yellow;\n  --input_comp_input_focus_background: white;\n}\n\n.inputComp {\n  width: var(--input_comp_width);\n  font-family: var(--input_comp_font_family);\n}\n\n.inputComp_containerBox__above {\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n}\n\n.inputComp_containerBox__below {\n  flex-direction: column-reverse;\n  display: flex;\n}\n\n.inputComp_containerBox__left {\n  flex-direction: row;\n  display: flex;\n}\n\n.inputComp_headerBox {\n  text-align: center;\n  color: var(--input_comp_heading_color);\n  font-size: var(--input_comp_heading_font_size);\n  font-weight: var(--input_comp_heading_font_weight);\n  align-self: center;\n}\n\n.inputComp_input {\n  color: var(--input_comp_input_color);\n  background: var(--input_comp_input_background);\n  border-color: var(--input_comp_input_border_color);\n  font-size: var(--input_comp_input_font_size);\n  font-weight: var(--input_comp_input_font_weight);\n  padding: .4rem;\n}\n\n.inputComp_input:focus {\n  outline-color: var(--input_comp_input_focus_outline);\n  background-color: var(--input_comp_input_focus_background);\n}\n\n.inputComp_input:invalid {\n  background-color: red;\n}\n\n.inputComp_input::-webkit-input-placeholder {\n  color: var(--input_comp_input_placeholder_color);\n}\n\n","<template>\r\n  <div class=\"inputComp\">\r\n    <div :class=\"compute_container_class()\">\r\n      <div\r\n        v-show=\"heading\"\r\n        class=\"inputComp_headerBox\"\r\n        :style=\"header_style\"\r\n      >\r\n        {{ heading }}\r\n      </div>\r\n      <input\r\n        v-model=\"currentValue\"\r\n        class=\"inputComp_input\"\r\n        :size=\"inputSize\"\r\n        :type=\"inputType\"\r\n        :style=\"input_box_style\"\r\n        :placeholder=\"placeholder\"\r\n        :checked=\"inputChecked\"\r\n        @change=\"valueChanged\"\r\n      >\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'InputComp',\r\n    props: {\r\n      heading: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      // eslint-disable-next-line vue/require-prop-types\r\n      inputValue: {\r\n        default: null\r\n      },\r\n      inputChecked: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      inputType: {\r\n        type: String,\r\n        default: 'text'\r\n      },\r\n      placeholder: {\r\n        type: String,\r\n        default: 'Enter a value'\r\n      },\r\n      inputSize: {\r\n        type: String,\r\n        default: '40'\r\n      },\r\n      headerPosition: {\r\n        type: String,\r\n        default: 'left'\r\n      },\r\n      singleBorder: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      cssVariables: {\r\n        type: Object,\r\n        default: () => {\r\n          return null;\r\n        }\r\n      }\r\n    },\r\n    emits: {\r\n      'inputCompValueChanged': null\r\n    },\r\n    data(){\r\n      return {\r\n        currentValue: this.inputValue\r\n      }\r\n    },\r\n    computed: {\r\n      header_style: function(){\r\n        let header_margin = null;\r\n        if(this.headerPosition === 'left'){\r\n          header_margin = 'margin-right: 5px;';\r\n        }else if(this.headerPosition === 'below'){\r\n          header_margin = 'margin-top: 2px;';\r\n        }\r\n        return header_margin;\r\n      },\r\n      input_box_style: function(){\r\n        let box_style = null;\r\n        if(this.singleBorder){\r\n          box_style = 'border: none; border-bottom: 1px solid;';\r\n        }else{\r\n          box_style = 'border: 1px solid;';\r\n        }\r\n\r\n        if(this.inputType === 'number'){\r\n          box_style = `${box_style}width: ${this.inputSize}px;`;\r\n        }\r\n        return box_style;\r\n      }\r\n    },\r\n    watch: {\r\n      inputValue(inputValue){\r\n        this.currentValue = inputValue;\r\n      }\r\n    },\r\n    mounted(){\r\n      if(this.cssVariables !== null){\r\n        for(let key of Object.keys(this.cssVariables)){\r\n          this.$el.style.setProperty(`--${key}`, this.cssVariables[key]);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      valueChanged: function(){\r\n        this.$emit('inputCompValueChanged', this.currentValue);\r\n      },\r\n      compute_container_class: function() {\r\n        if(this.headerPosition === 'left'){\r\n          return 'inputComp_containerBox__left';\r\n        }else if(this.headerPosition === 'above'){\r\n          return 'inputComp_containerBox__top';\r\n        }else if(this.headerPosition === 'below'){\r\n          return 'inputComp_containerBox__below';\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --input_comp_width: 10rem;\r\n    --input_comp_font_family: Verdana,serif;\r\n    --input_comp_heading_color: black;\r\n    --input_comp_heading_font_size: 1rem;\r\n    --input_comp_heading_font_weight: bold;\r\n    --input_comp_input_font_size: 0.8rem;\r\n    --input_comp_input_font_weight: normal;\r\n    --input_comp_input_color: black;\r\n    --input_comp_input_background: transparent;\r\n    --input_comp_input_border_color: black;\r\n    --input_comp_input_placeholder_color: black;\r\n    --input_comp_input_focus_outline: yellow;\r\n    --input_comp_input_focus_background: white;\r\n  }\r\n  .inputComp {\r\n    width: var(--input_comp_width);\r\n    font-family: var(--input_comp_font_family);\r\n  }\r\n  .inputComp_containerBox__above {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .inputComp_containerBox__below {\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n  }\r\n  .inputComp_containerBox__left {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .inputComp_headerBox {\r\n    align-self: center;\r\n    text-align: center;\r\n    color: var(--input_comp_heading_color);\r\n    font-size: var(--input_comp_heading_font_size);\r\n    font-weight: var(--input_comp_heading_font_weight);\r\n  }\r\n  .inputComp_input {\r\n    color: var(--input_comp_input_color);\r\n    background: var(--input_comp_input_background);\r\n    border-color: var(--input_comp_input_border_color);\r\n    font-size: var(--input_comp_input_font_size);\r\n    font-weight: var(--input_comp_input_font_weight);\r\n    padding: 0.4rem;\r\n  }\r\n  .inputComp_input:focus {\r\n    outline-color: var(--input_comp_input_focus_outline);\r\n    background-color: var(--input_comp_input_focus_background);\r\n  }\r\n  .inputComp_input:invalid {\r\n    background-color: red;\r\n  }\r\n  .inputComp_input::-webkit-input-placeholder {\r\n    color: var(--input_comp_input_placeholder_color);\r\n  }\r\n</style>","<template>\r\n  <div id=\"container\">\r\n    <div id=\"plotDiv\">\r\n      <points-plot-comp\r\n        id=\"pointsPlotComp\"\r\n        :x=\"x\"\r\n        :y=\"y\"\r\n        :grp=\"grp\"\r\n        title=\"Fisher Iris Flower Data\"\r\n        sub-title=\"Demo of PointsPlotComp\"\r\n        :x-label=\"x_variable\"\r\n        :y-label=\"y_variable\"\r\n        :x-axis=\"xAxis\"\r\n        :y-axis=\"yAxis\"\r\n        :grouping=\"grouping\"\r\n        :fit-data=\"fitData\"\r\n        @points-plot-comp-hover=\"onPointHover\"\r\n      />\r\n      <div id=\"tablesDiv\">\r\n        <table-comp\r\n          title=\"Iris Variables\"\r\n          :rows=\"varTableRows\"\r\n          :headings=\"varTableHeadings\"\r\n          :table-height=\"varTableHeight\"\r\n          :column-widths=\"varTableColWidths\"\r\n          :css-variables=\"css_variables_table_comp\"\r\n        />\r\n        <table-comp\r\n          title=\"Linear Model\"\r\n          :rows=\"lmTableRows\"\r\n          :headings=\"lmTableHeadings\"\r\n          :table-height=\"lmTableHeight\"\r\n          :column-widths=\"lmTableColWidths\"\r\n          :css-variables=\"css_variables_table_comp\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div id=\"controlsDiv\">\r\n      <div\r\n        class=\"headingDiv\"\r\n      >\r\n        Current Point- {{ hoverMessage }}\r\n      </div>\r\n      <div id=\"scaleDiv\">\r\n        <div class=\"headingDiv\">\r\n          Scaling-\r\n        </div>\r\n        <select-comp\r\n          heading=\"Axis\"\r\n          placeholder=\"X\"\r\n          :items=\"XY\"\r\n          :blur-panel=\"blur_panel\"\r\n          :css-variables=\"css_variables_select_comp\"\r\n          @select-comp-value-changed=\"value => {scale_axis = value}\"\r\n        />\r\n        <select-comp\r\n          heading=\"Variable\"\r\n          placeholder=\"sepal_length\"\r\n          :items=\"variables\"\r\n          :blur-panel=\"blur_panel\"\r\n          :css-variables=\"css_variables_select_comp\"\r\n          @select-comp-value-changed=\"value => {scale_variable = value}\"\r\n        />\r\n        <input-comp\r\n          heading=\"Min\"\r\n          header-position=\"above\"\r\n          placeholder=\"\"\r\n          input-size=\"6\"\r\n          :input-value=\"scale_min_value\"\r\n          :css-variables=\"css_variables_input_comp\"\r\n          @input-comp-value-changed=\"value => {scale_min_value = value}\"\r\n        />\r\n        <input-comp\r\n          heading=\"Max\"\r\n          header-position=\"above\"\r\n          placeholder=\"\"\r\n          input-size=\"6\"\r\n          :input-value=\"scale_max_value\"\r\n          :css-variables=\"css_variables_input_comp\"\r\n          @input-comp-value-changed=\"value => {scale_max_value = value}\"\r\n        />\r\n        <input-comp\r\n          heading=\"Step\"\r\n          header-position=\"above\"\r\n          placeholder=\"\"\r\n          input-size=\"6\"\r\n          :input-value=\"scale_step_value\"\r\n          :css-variables=\"css_variables_input_comp\"\r\n          @input-comp-value-changed=\"value => {scale_step_value = value}\"\r\n        />\r\n        <button-comp\r\n          @button-comp-clicked=\"updateScaling\"\r\n        >\r\n          Update\r\n        </button-comp>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PointsPlotComp from 'pointsplotcomp';\r\nimport ButtonComp from 'buttoncomp';\r\nimport TableComp from 'tablecomp';\r\nimport SelectComp from 'selectcomp';\r\nimport InputComp from 'inputcomp';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    PointsPlotComp,\r\n    ButtonComp,\r\n    TableComp,\r\n    SelectComp,\r\n    InputComp\r\n  },\r\n  data() {\r\n    return {\r\n      x: null,\r\n      y: null,\r\n      grp: null,\r\n      variables: null,\r\n      x_variable: null,\r\n      y_variable: null,\r\n      intercept: null,\r\n      predictor: null,\r\n      xAxis: {\r\n        min: 0,\r\n        max: 10,\r\n        step: 1\r\n      },\r\n      yAxis: null,\r\n      grouping: {\r\n        'Iris-setosa': {color:'#FF19D9'},\r\n        'Iris-versicolor':{color:'#55FF33'},\r\n        'Iris-virginica':{color:'#3377FF'}\r\n      },\r\n      fitData: null,\r\n      varTableRows: null,\r\n      varTableHeadings: ['Name','Mean','Variance','Median','Min','Max','95th Q'],\r\n      varTableHeight: 150,\r\n      varTableColWidths: [120, 80, 80, 80, 80, 80, 80],\r\n\r\n      lmTableRows: null,\r\n      lmTableHeadings: ['Parameter', 'Value'],\r\n      lmTableHeight: 100,\r\n      lmTableColWidths: [120, 80],\r\n\r\n      hoverMessage: 'X:  Y:',\r\n      XY: ['X', 'Y'],\r\n      blur_panel: true,\r\n      css_variables_select_comp: {\r\n        select_comp_width: '8rem',\r\n        select_comp_items_panel_position: 'absolute',\r\n        select_comp_items_panel_z_index: '100'\r\n      },\r\n      css_variables_table_comp: {\r\n        table_comp_thead_background: 'transparent',\r\n        table_comp_row_odd_background: 'transparent',\r\n        table_comp_row_even_background: 'transparent',\r\n        table_comp_cell_font_size: '1.0rem'\r\n      },\r\n      css_variables_input_comp: {\r\n        input_comp_width: '4rem'\r\n      },\r\n      scale_axis: 'X',\r\n      scale_variable: 'sepal_length',\r\n      scale_min_value: 0,\r\n      scale_max_value: 10,\r\n      scale_step_value: 1\r\n    };\r\n  },\r\n  methods: {\r\n    getSummary: async function(){\r\n      const summary_url = 'http://127.0.0.1:8080/summary';\r\n      try{\r\n        const resp = await fetch(summary_url, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'text/plain'\r\n          }\r\n        })\r\n        if(resp.ok){\r\n          const response_text = await resp.text();\r\n          return Promise.resolve(response_text);\r\n        }else {\r\n          return Promise.reject(`getVariables error. Status = ${resp.status}`);\r\n        }\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    },\r\n    getData: async function(){\r\n      const data_url = 'http://127.0.0.1:8080/iris_data?';\r\n      const esc = encodeURIComponent;  //encode to escape\r\n      const params = {\r\n        variable_1: this.x_variable,\r\n        variable_2: this.y_variable\r\n      }\r\n      const query = Object.keys(params).map(k => `${esc(k)}=${esc(params[k])}`).join('&');\r\n      try {\r\n        const resp = await fetch(data_url + query, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'text/plain'\r\n          }\r\n        })\r\n        if(resp.ok){\r\n          const response_text = await resp.text();\r\n          return Promise.resolve(response_text);\r\n        }else {\r\n          return Promise.reject(`getData error. Status = ${resp.status}`);\r\n        }\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    },\r\n    getLm: async function(){\r\n      const data_url = 'http://127.0.0.1:8080/iris_lm?';\r\n      const esc = encodeURIComponent;  //encode to escape\r\n      const params = {\r\n        variable_1: this.x_variable,\r\n        variable_2: this.y_variable\r\n      }\r\n      const query = Object.keys(params).map(k => `${esc(k)}=${esc(params[k])}`).join('&');\r\n      try {\r\n        const resp = await fetch(data_url + query, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'text/plain'\r\n          }\r\n        })\r\n        if(resp.ok){\r\n          const response_text = await resp.text();\r\n          return Promise.resolve(response_text);\r\n        }else {\r\n          return Promise.reject(`getLm error. Status = ${resp.status}`);\r\n        }\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    },\r\n    onPointHover: function(obj){\r\n      this.hoverMessage = `X: ${obj.x} Y: ${obj.y}`;\r\n    },\r\n    updateScaling: async function(){\r\n      if(this.scale_axis === 'X'){\r\n        this.x_variable = this.scale_variable;\r\n        this.xAxis = {\r\n          min: parseFloat(this.scale_min_value),\r\n          max: parseFloat(this.scale_max_value),\r\n          step: parseFloat(this.scale_step_value)\r\n        }\r\n      }else if(this.scale_axis === 'Y'){\r\n        this.y_variable = this.scale_variable;\r\n        this.yAxis = {\r\n          min: parseFloat(this.scale_min_value),\r\n          max: parseFloat(this.scale_max_value),\r\n          step: parseFloat(this.scale_step_value)\r\n        }\r\n      }\r\n\r\n      await this.updatePlot();\r\n    },\r\n    updatePlot: async function(){\r\n      let response_text = await this.getData();\r\n      const data_obj = JSON.parse(response_text);\r\n      this.x = data_obj.x;\r\n      this.y = data_obj.y;\r\n      this.grp = data_obj.grp;\r\n\r\n      response_text = await this.getLm();\r\n      const lm_obj = JSON.parse(response_text);\r\n      this.intercept = parseFloat(lm_obj.intercept);\r\n      this.predictor = parseFloat(lm_obj.predictor);\r\n      //console.log(`intercept: ${this.intercept} predictor: ${this.predictor}`)\r\n      const fit = lm_obj.fit;\r\n      const fit_data = [];\r\n      for(let i = 0; i < fit.length; i++){\r\n        const obj = {};\r\n        obj.x = this.x[i];\r\n        obj.y = parseFloat(fit[i]);\r\n        fit_data.push(obj);\r\n      }\r\n      this.fitData = fit_data;\r\n\r\n      this.lmTableRows = [];\r\n      this.lmTableRows.push({\r\n        'parameter': 'Intercept',\r\n        'value': this.intercept\r\n      })\r\n      this.lmTableRows.push({\r\n        'parameter': this.x_variable,\r\n        'value': this.predictor\r\n      })\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.x_variable = \"sepal_length\";\r\n    this.y_variable = \"petal_length\";\r\n\r\n    let response_text = await this.getSummary();\r\n    const summary_obj = JSON.parse(response_text);\r\n    this.varTableRows = [];\r\n    this.variables = [];\r\n\r\n    for(let key of Object.keys(summary_obj)){\r\n      this.varTableRows.push(\r\n        {\r\n          'name': key,\r\n          'mean': summary_obj[key].mean[0],\r\n          'var': summary_obj[key].var[0],\r\n          'median': summary_obj[key].median[0],\r\n          'min': summary_obj[key].min[0],\r\n          'max': summary_obj[key].max[0],\r\n          'quantile': summary_obj[key].quantile_95[0]\r\n        }\r\n      )\r\n      this.variables.push(key);\r\n    }\r\n    /*const min = variables_obj.min;\r\n    const max = variables_obj.max;\r\n    for(const [idx, name] of variables_obj.variables.entries()){\r\n      this.tableRows.push({'name': name, 'min': min[idx], 'max': max[idx]});\r\n      this.variables.push(name);\r\n    }*/\r\n\r\n    await this.updatePlot();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n  #container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n  }\r\n  #plotDiv {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  #tablesDiv {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  #controlsDiv {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 120px;\r\n    margin-top: 30px;\r\n  }\r\n  #pointsPlotComp {\r\n    margin-left: 40px;\r\n  }\r\n  .headingDiv {\r\n    font-family: Verdana, sans-serif;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n  #scaleDiv {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 800px;\r\n  }\r\n</style>"],"names":[],"version":3,"file":"index.cc2eb40a.css.map"}